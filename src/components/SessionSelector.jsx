import React, { useState, useEffect } from 'react'
import { getSessions, createSession } from '../utils/sessionManager'

const SessionSelector = ({ onSessionSelect, onClose }) => {
  const [sessions, setSessions] = useState([])
  const [newSessionName, setNewSessionName] = useState('')
  const [isCreating, setIsCreating] = useState(false)
  const [selectedSession, setSelectedSession] = useState(null)

  useEffect(() => {
    loadSessions()
  }, [])

  const loadSessions = () => {
    const existingSessions = getSessions()
    setSessions(existingSessions)
  }

  const handleCreateSession = () => {
    if (newSessionName.trim()) {
      setIsCreating(true)
      
      setTimeout(() => {
        const newSession = createSession(newSessionName.trim())
        if (newSession) {
          setSessions(prev => [...prev, newSession])
          setNewSessionName('')
          setIsCreating(false)
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
          onSessionSelect(newSession)
        }
      }, 500)
    }
  }

  const handleSelectSession = (session) => {
    setSelectedSession(session)
    // –ù–µ –≤—ã–∑—ã–≤–∞–µ–º onSessionSelect —Å—Ä–∞–∑—É, –∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—Ö–æ–¥–∞
  }

  const handleEnterSession = (session) => {
    onSessionSelect(session)
  }

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    })
  }

  if (!onClose) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-gray-800 border border-gray-600 rounded-lg p-6 w-[600px] max-w-[90vw] max-h-[90vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h3 className="text-xl font-fantasy text-dnd-gold">üé≠ –í—ã–±–æ—Ä —Å–µ—Å—Å–∏–∏</h3>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-white text-2xl"
          >
            √ó
          </button>
        </div>

        <div className="space-y-6">
          {/* –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ */}
          <div className="bg-gray-700 rounded-lg p-4">
            <h4 className="text-lg font-semibold text-dnd-gold mb-3">
              ‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
            </h4>
            
            <div className="flex space-x-3">
              <input
                type="text"
                value={newSessionName}
                onChange={(e) => setNewSessionName(e.target.value)}
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏..."
                className="input-field flex-1"
                maxLength={50}
              />
              <button
                onClick={handleCreateSession}
                disabled={!newSessionName.trim() || isCreating}
                className="btn-primary disabled:opacity-50"
              >
                {isCreating ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å'}
              </button>
            </div>
          </div>

          {/* –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Å—Å–∏–∏ */}
          <div>
            <h4 className="text-lg font-semibold text-dnd-gold mb-3">
              üìö –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Å—Å–∏–∏ ({sessions.length})
            </h4>
            
            {sessions.length === 0 ? (
              <div className="text-center text-gray-400 py-8">
                <div className="text-4xl mb-2">üìö</div>
                <p>–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π</p>
                <p className="text-sm">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é –≤—ã—à–µ</p>
              </div>
            ) : (
              <div className="space-y-3 max-h-96 overflow-y-auto">
                {sessions.map(session => (
                  <div
                    key={session.id}
                    className={`bg-gray-700 rounded-lg p-4 cursor-pointer transition-all hover:bg-gray-600 ${
                      selectedSession?.id === session.id ? 'ring-2 ring-dnd-gold' : ''
                    }`}
                    onClick={() => handleSelectSession(session)}
                  >
                    <div className="flex justify-between items-start mb-2">
                      <h5 className="font-semibold text-white text-lg">{session.name}</h5>
                      <div className="flex items-center space-x-2">
                        <span className="text-xs bg-dnd-blue text-white px-2 py-1 rounded">
                          {session.maps.filter(m => m.isActive).length} –∫–∞—Ä—Ç
                        </span>
                        <span className="text-xs bg-dnd-green text-white px-2 py-1 rounded">
                          {session.characters.length} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
                        </span>
                      </div>
                    </div>
                    
                    <div className="text-sm text-gray-300 mb-3">
                      <p>–°–æ–∑–¥–∞–Ω–∞: {formatDate(session.createdAt)}</p>
                      <p>–û–±–Ω–æ–≤–ª–µ–Ω–∞: {formatDate(session.updatedAt)}</p>
                    </div>
                    
                    <div className="flex items-center justify-between">
                      <div className="text-xs text-gray-400">
                        <span>ID: {session.id.slice(-8)}</span>
                      </div>
                      
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          handleEnterSession(session)
                        }}
                        className="btn-primary text-sm px-3 py-1"
                      >
                        üéÆ –í–æ–π—Ç–∏ –≤ —Å–µ—Å—Å–∏—é
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="border-t border-gray-600 pt-4">
            <div className="text-xs text-gray-400 space-y-1">
              <p>‚Ä¢ <strong>–°–µ—Å—Å–∏–∏</strong> —Å–æ–¥–µ—Ä–∂–∞—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ: –∫–∞—Ä—Ç—ã, –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
              <p>‚Ä¢ <strong>–ü–µ—Ä—Å–æ–Ω–∞–∂–∏</strong> –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–µ—Å—Å–∏–∏</p>
              <p>‚Ä¢ <strong>–ö–∞—Ä—Ç—ã</strong> –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å/–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤</p>
              <p>‚Ä¢ <strong>–î–∞–Ω–Ω—ã–µ</strong> —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default SessionSelector
