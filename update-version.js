#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
const fs = require('fs')
const path = require('path')

// –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∏–∑ package.json
const packagePath = path.join(__dirname, 'package.json')
const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'))

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
const currentVersion = packageJson.version
const [major, minor] = currentVersion.split('.').map(Number)

// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–∏–Ω–æ—Ä–Ω—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ 0.01
const newMinor = minor + 1
const newVersion = `${major}.${newMinor.toString().padStart(2, '0')}`

// –û–±–Ω–æ–≤–ª—è–µ–º package.json
packageJson.version = newVersion
fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2))

// –û–±–Ω–æ–≤–ª—è–µ–º version.js
const versionPath = path.join(__dirname, 'src/utils/version.js')
let versionContent = fs.readFileSync(versionPath, 'utf8')

// –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Ä—Å–∏—é –≤ version.js
versionContent = versionContent.replace(
  /export const VERSION = '[^']*'/,
  `export const VERSION = '${newVersion}'`
)

// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Å–±–æ—Ä–∫–∏
const buildDate = new Date().toISOString().split('T')[0]
versionContent = versionContent.replace(
  /export const BUILD_DATE = '[^']*'/,
  `export const BUILD_DATE = '${buildDate}'`
)

fs.writeFileSync(versionPath, versionContent)

console.log(`üöÄ –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${currentVersion} ‚Üí ${newVersion}`)
console.log(`üìÖ –î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏: ${buildDate}`)
console.log(`\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:`)
console.log(`1. git add .`)
console.log(`2. git commit -m "feat: –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π - –≤–µ—Ä—Å–∏—è ${newVersion}"`)
console.log(`3. git push`)
